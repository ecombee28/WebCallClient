plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.example.eric.combee'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "com.squareup.okhttp3:mockwebserver"
    testImplementation "com.squareup.okhttp3:okhttp"
    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.mockito:mockito-core:5.2.0"
    testImplementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.15'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.kafka:spring-kafka-test"

}


tasks.named('test') {
    useJUnitPlatform()
}

//unitTest configuration
//ensure tests have 'unitTest' tag and use JUnit ONLY
task unitTests(type: Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        includeTags 'unitTests'
    }
    finalizedBy jacocoTestReport
}


jacocoTestReport {
    dependsOn(unitTests)
    reports {
        csv.required = true
        xml.required = true
        html.required = true
    }
    getExecutionData().setFrom(files('build/jacoco/unitTests.exec'))
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/model/**"// Ignore model specifics (ex. constructors, getters, setters)
            ])
        }))
    }
}